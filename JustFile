# build and test the application
all: build test

# build the application
build:
	@echo "Building..."
	@go build -o tmp/main main.go

build-with-completion:
  @echo "Building..."
  @go build -o tmp/main main.go
  @sudo tmp/main completion zsh > _cred
  @sudo mv _cred /usr/share/zsh/site-functions/_cred
  @sudo mv tmp/main /usr/bin/cred

add $cmd:
  @echo "Adding..."
  @cobra-cli add ${cmd}

# Run the application
run *args:
	@go run main.go {{args}}

# Test the application
test:
	@echo "Testing..."
	@go test ./... -v

# Clean the binary
clean:
	@echo "Cleaning..."\
	@rm -rf main tmp

# Create a new git tag and push it
tag $version $message:
  @echo "Creating tag v${version} with message: ${message}"
  @git tag -a v${version} -m "${message}"
  @echo "Push tag to remote with \"git push origin v${version}\""

# Generate CLI documentation using cobra's --generate-docs
docs:
  # make sure docs/src folder exists, else create one
  @echo "Building CLI binary for doc generation..."
  @go build -o tmp/main main.go
  @echo "Generating docs..."
  @./tmp/main --generate-docs
  @echo "Docs generated successfully."
  # change docs/src/SUMMARY.md file and use mdbook build && mdbook server --open

# Live Reload
watch:
  @if command -v air > /dev/null; then \
    air && echo "Watching..."; \
  else \
    read -p "Go's 'air' is not installed on your machine. Do you want to install it? [Y/n] " choice; \
    if [ "$$choice" != "n" ] && [ "$$choice" != "N" ]; then \
      go install github.com/air-verse/air@latest; \
      air; \
      echo "Watching..."; \
    else \
      echo "You chose not to install air. Exiting..."; \
      exit 1; \
    fi; \
  fi
